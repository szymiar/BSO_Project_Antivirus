/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/AntivirusController.h:5:1: warning: #includes are not sorted properly [llvm-include-order]
#include <sys/vfs.h>
^        ~~~~~~~~~~~
         <string>
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/FileHandler.h:4:1: warning: #includes are not sorted properly [llvm-include-order]
#include <iostream>
^        ~~~~~~~~~~
         <fstream>
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/QuarantineServiceHandler.h:4:1: warning: #includes are not sorted properly [llvm-include-order]
#include <string>
^        ~~~~~~~~
         <stdlib.h>
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/QuarantineServiceHandler.h:7:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^
note: this fix will not be applied because it overlaps with another fix
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/QuarantineServiceHandler.h:9:19: warning: initialization of 'QuarantineFolder' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
const std::string QuarantineFolder="quarantine";
                  ^
/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/basic_string.h:514:7: note: possibly throwing constructor declared here
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/QuarantineServiceHandler.h:9:36: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments]
const std::string QuarantineFolder="quarantine";
                                   ^
/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/basic_string.h:514:39: note: default parameter was declared here
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
                                      ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/AntivirusController.cpp:2:1: warning: #includes are not sorted properly [llvm-include-order]
#include "../include/HashCalculator.h"
^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         "../include/FileHandler.h"
/home/szymiar/BSO/BSO_Project_Antivirus/src/AntivirusController.cpp:10:27: warning: the parameter 'filename' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
void ScanFile(std::string filename){
              ~~~         ^
              const      &
/home/szymiar/BSO/BSO_Project_Antivirus/src/AntivirusController.cpp:24:30: warning: the parameter 'path' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
void ScanPackage(std::string path){
                 ~~~         ^
                 const      &
/home/szymiar/BSO/BSO_Project_Antivirus/src/AntivirusController.cpp:27:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments]
        for(auto&  dirEntry :  fs::recursive_directory_iterator(path,fs::directory_options::skip_permission_denied)){
                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/fs_path.h:182:37: note: default parameter was declared here
      path(_Source const& __source, format = auto_format)
                                    ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/AntivirusController.cpp:42:30: warning: the parameter 'hash' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
bool IsDangerous(std::string hash){
                 ~~~         ^
                 const      &
/home/szymiar/BSO/BSO_Project_Antivirus/src/AntivirusController.cpp:55:33: warning: the parameter 'filename' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
void QuarantineFile(std::string filename){
                    ~~~         ^
                    const      &
/home/szymiar/BSO/BSO_Project_Antivirus/src/AntivirusController.cpp:63:45: warning: parameter 'filename' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
        std::vector<std::string> hashes = ReadFile(filename);
                                                   ^~~~~~~~~
                                                   std::move()
/home/szymiar/BSO/BSO_Project_Antivirus/src/AntivirusController.cpp:64:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments]
        AppendToFile(hashes, "virusHashDatabase/VirusHashes.txt");
                             ^
/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/basic_string.h:514:39: note: default parameter was declared here
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
                                      ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/AntivirusController.h:5:1: warning: #includes are not sorted properly [llvm-include-order]
#include <sys/vfs.h>
^        ~~~~~~~~~~~
         <string>
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/AppController.h:4:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/FileHandler.h:4:1: warning: #includes are not sorted properly [llvm-include-order]
#include <iostream>
^        ~~~~~~~~~~
         <fstream>
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/QuarantineServiceHandler.h:4:1: warning: #includes are not sorted properly [llvm-include-order]
#include <string>
^        ~~~~~~~~
         <stdlib.h>
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/QuarantineServiceHandler.h:7:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^
note: this fix will not be applied because it overlaps with another fix
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/QuarantineServiceHandler.h:9:19: warning: initialization of 'QuarantineFolder' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
const std::string QuarantineFolder="quarantine";
                  ^
/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/basic_string.h:514:7: note: possibly throwing constructor declared here
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/QuarantineServiceHandler.h:9:36: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments]
const std::string QuarantineFolder="quarantine";
                                   ^
/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/basic_string.h:514:39: note: default parameter was declared here
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
                                      ^
AppController.cpp:44:63: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments]
                for(const auto& dirEntry : fs::recursive_directory_iterator(QuarantineFolder)){
                                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/fs_path.h:182:37: note: default parameter was declared here
      path(_Source const& __source, format = auto_format)
                                    ^
AppController.cpp:71:14: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments]
                decision = stoi(dc);
                           ^
/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/basic_string.h:6410:29: note: default parameter was declared here
  stoi(const string& __str, size_t* __idx = 0, int __base = 10)
                            ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/FileHandler.h:4:1: warning: #includes are not sorted properly [llvm-include-order]
#include <iostream>
^        ~~~~~~~~~~
         <fstream>
/home/szymiar/BSO/BSO_Project_Antivirus/src/FileHandler.cpp:4:47: warning: the parameter 'filename' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
std::vector<std::string> ReadFile(std::string filename){
                                  ~~~         ^
                                  const      &
/home/szymiar/BSO/BSO_Project_Antivirus/src/FileHandler.cpp:6:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments]
        std::ifstream fil(filename);
                      ^
/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/fstream:530:8: note: default parameter was declared here
                     ios_base::openmode __mode = ios_base::in)
                     ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/FileHandler.cpp:16:65: warning: the parameter 'filename' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
void  AppendToFile(std::vector<std::string> hashes, std::string filename){
                                                    ~~~         ^
                                                    const      &
/home/szymiar/BSO/BSO_Project_Antivirus/src/FileHandler.cpp:19:2: warning: use range-based for loop instead [modernize-loop-convert]
        for(unsigned int i = 0; i< hashes.size(); i++){
        ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           (const auto & hashe : hashes)
/home/szymiar/BSO/BSO_Project_Antivirus/src/FileHandler.cpp:24:37: warning: the parameter 'filename' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
bool CheckFileExistence(std::string filename)
                        ~~~         ^
                        const      &
/home/szymiar/BSO/BSO_Project_Antivirus/src/FileHandler.cpp:26:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments]
        std::ifstream infile(filename.c_str());
                      ^
/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/fstream:513:39: note: default parameter was declared here
      basic_ifstream(const char* __s, ios_base::openmode __mode = ios_base::in)
                                      ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/HashCalculator.cpp:3:37: warning: the parameter 'filename' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
std::string GetFileHash(std::string filename){
                        ~~~         ^
                        const      &
/home/szymiar/BSO/BSO_Project_Antivirus/src/HashCalculator.cpp:10:11: warning: calling 'popen' uses a command processor [cert-env33-c]
        stream = popen(cmd.c_str(), "r");
                 ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/HashCalculator.cpp:11:5: warning: implicit conversion 'std::FILE *' (aka '_IO_FILE *') -> bool [readability-implicit-bool-conversion]
        if(stream){
           ^     ~
                  != nullptr
/home/szymiar/BSO/BSO_Project_Antivirus/src/HashCalculator.cpp:12:10: warning: implicit conversion 'int' -> bool [readability-implicit-bool-conversion]
                while(!feof(stream)){
                      ~^~~~        ~
                                    == 0
/home/szymiar/BSO/BSO_Project_Antivirus/src/HashCalculator.cpp:13:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay]
                        if(fgets(buffer, max_buffer, stream) != NULL) data.append(buffer);
                                 ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/HashCalculator.cpp:13:44: warning: use nullptr [modernize-use-nullptr]
                        if(fgets(buffer, max_buffer, stream) != NULL) data.append(buffer);
                                                                ^~~~~
                                                                nullptr
/home/szymiar/BSO/BSO_Project_Antivirus/src/HashCalculator.cpp:13:49: warning: statement should be inside braces [hicpp-braces-around-statements]
                        if(fgets(buffer, max_buffer, stream) != NULL) data.append(buffer);
                                                                     ^
                                                                      {
/home/szymiar/BSO/BSO_Project_Antivirus/src/HashCalculator.cpp:13:62: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay]
                        if(fgets(buffer, max_buffer, stream) != NULL) data.append(buffer);
                                                                                  ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/FileHandler.h:4:1: warning: #includes are not sorted properly [llvm-include-order]
#include <iostream>
^        ~~~~~~~~~~
         <fstream>
/home/szymiar/BSO/BSO_Project_Antivirus/src/HashDatabase.cpp:6:6: warning: implicit conversion 'HashDatabase *' -> bool [readability-implicit-bool-conversion]
        if(!instance){
           ~^~~~~~~~~
            == nullptr
/home/szymiar/BSO/BSO_Project_Antivirus/src/HashDatabase.cpp:7:2: warning: assigning newly created 'gsl::owner<>' to non-owner 'HashDatabase *' [cppcoreguidelines-owning-memory]
        instance = new HashDatabase;}
        ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/HashDatabase.cpp:13:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments]
        Hashes = ReadFile("virusHashDatabase/VirusHashes.txt");
                          ^
/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/basic_string.h:514:39: note: default parameter was declared here
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
                                      ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/HashDatabase.cpp:24:40: warning: use nullptr [hicpp-use-nullptr]
HashDatabase *HashDatabase::instance = 0;
                                       ^~
                                       nullptr
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/AppController.h:4:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/QuarantineServiceHandler.h:4:1: warning: #includes are not sorted properly [llvm-include-order]
#include <string>
^        ~~~~~~~~
         <stdlib.h>
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/QuarantineServiceHandler.h:7:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^
note: this fix will not be applied because it overlaps with another fix
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/QuarantineServiceHandler.h:9:19: warning: initialization of 'QuarantineFolder' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
const std::string QuarantineFolder="quarantine";
                  ^
/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/basic_string.h:514:7: note: possibly throwing constructor declared here
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/./../include/QuarantineServiceHandler.h:9:36: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments]
const std::string QuarantineFolder="quarantine";
                                   ^
/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/basic_string.h:514:39: note: default parameter was declared here
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
                                      ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/QuarantineServiceHandler.cpp:6:35: warning: the parameter 'filename' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
void MoveFileToSafety(std::string filename){
                      ~~~         ^
                      const      &
/home/szymiar/BSO/BSO_Project_Antivirus/src/QuarantineServiceHandler.cpp:8:2: warning: calling 'system' uses a command processor [cert-env33-c]
        system(cmd.c_str());
        ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/QuarantineServiceHandler.cpp:12:40: warning: the parameter 'filename' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
void ChangeFilePermissions(std::string filename){
                           ~~~         ^
                           const      &
/home/szymiar/BSO/BSO_Project_Antivirus/src/QuarantineServiceHandler.cpp:13:26: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
        chmod(filename.c_str(), S_IRUSR | S_IRGRP | S_IROTH);
                                ^
/usr/include/x86_64-linux-gnu/sys/stat.h:168:17: note: expanded from macro 'S_IRUSR'
#define S_IRUSR __S_IREAD       /* Read by owner.  */
                ^
/usr/include/x86_64-linux-gnu/bits/stat.h:201:19: note: expanded from macro '__S_IREAD'
#define __S_IREAD       0400    /* Read by owner.  */
                        ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/QuarantineServiceHandler.cpp:13:36: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
        chmod(filename.c_str(), S_IRUSR | S_IRGRP | S_IROTH);
                                          ^
/usr/include/x86_64-linux-gnu/sys/stat.h:180:18: note: expanded from macro 'S_IRGRP'
#define S_IRGRP (S_IRUSR >> 3)  /* Read by group.  */
                 ^
/usr/include/x86_64-linux-gnu/sys/stat.h:168:17: note: expanded from macro 'S_IRUSR'
#define S_IRUSR __S_IREAD       /* Read by owner.  */
                ^
/usr/include/x86_64-linux-gnu/bits/stat.h:201:19: note: expanded from macro '__S_IREAD'
#define __S_IREAD       0400    /* Read by owner.  */
                        ^
/home/szymiar/BSO/BSO_Project_Antivirus/src/QuarantineServiceHandler.cpp:13:46: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
        chmod(filename.c_str(), S_IRUSR | S_IRGRP | S_IROTH);
                                                    ^
/usr/include/x86_64-linux-gnu/sys/stat.h:186:18: note: expanded from macro 'S_IROTH'
#define S_IROTH (S_IRGRP >> 3)  /* Read by others.  */
                 ^
/usr/include/x86_64-linux-gnu/sys/stat.h:180:17: note: expanded from macro 'S_IRGRP'
#define S_IRGRP (S_IRUSR >> 3)  /* Read by group.  */
                ^
